name: Deploy to Firebase Hosting

on:
  push:
    branches:
      - main

jobs:
  deploy-firebase:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: main
          lfs: true

      - name: Checkout LFS objects
        run: git lfs checkout

      - name: Read .nvmrc
        run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"
        id: nvm

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ steps.nvm.outputs.NVMRC }}
          cache: npm
          cache-dependency-path: |
            micro-site/package-lock.json
            sitemap-generator/package-lock.json
            web-stories-scraper/package-lock.json

      - name: Install dependencies
        run: |
          npm ci
          (cd micro-site && npm ci)
          (cd web-stories-scraper && npm ci)
          (cd sitemap-generator && npm ci)
          (cd functions && npm ci)
        env:
          CI: true

      - name: Test Firebase Function
        run: cd functions && npm run test test/**.test.ts

      - name: Download Web Stories
        run: cat ./stories.txt | xargs -I{} node ./web-stories-scraper/index.js {} ./public/stories/

      - name: Undo changes to local stories
        run: |
          git checkout public/stories/a-day-in-the-life-of-dap-the-contract/index.html

      - name: Build website
        run: cd micro-site && npm run build

      - name: Compress images for website and downloaded stories
        uses: calibreapp/image-actions@1.1.0
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          compressOnly: true
          ignorePaths: 'node_modules/**,micro-site/**,public/static/**'

      - name: Build XML Sitemap
        run: node ./sitemap-generator/index.js ./public/sitemap.xml

      - name: Deploy to Firebase
        run: npx firebase deploy --project=$PROJECT_ID --token=$FIREBASE_TOKEN -m "Automated deploy from GitHub Actions"
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
